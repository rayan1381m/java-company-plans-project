
import java.awt.Point;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import static java.lang.Integer.parseInt;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author 98990
 */
public class UserUI extends javax.swing.JFrame {

    ArrayList<String> cities;
    User user;
    Login login;

    /**
     * Creates new form UserUI
     */
    public UserUI(User user, Login login, ArrayList<String> cities) {
        this.user = user;
        this.login = login;
        this.cities = cities;

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        buttonGroup1 = new javax.swing.ButtonGroup();
        popUpMenu = new javax.swing.JPopupMenu();
        deletPopup = new javax.swing.JMenuItem();
        updatePopup = new javax.swing.JMenuItem();
        tabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        userIDLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        addressInfoLabel = new javax.swing.JLabel();
        streetNumLabel = new javax.swing.JLabel();
        streetLabel = new javax.swing.JLabel();
        suburbLabel = new javax.swing.JLabel();
        cityLabel = new javax.swing.JLabel();
        userIdTextField = new javax.swing.JTextField();
        nameTextField = new javax.swing.JTextField();
        passwordTextField = new javax.swing.JTextField();
        streetNumTextField = new javax.swing.JTextField();
        streetTextField = new javax.swing.JTextField();
        suburbTextField = new javax.swing.JTextField();
        cityComboBox = new javax.swing.JComboBox<>();
        cityTextField = new javax.swing.JTextField();
        newCityRadioButton = new javax.swing.JRadioButton();
        changeButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        personalPlanRadioButton = new javax.swing.JRadioButton();
        businessPlanRadioButton = new javax.swing.JRadioButton();
        planIdLabel = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        mobilePhoneLabel = new javax.swing.JLabel();
        modelLabel = new javax.swing.JLabel();
        planIDTextField = new javax.swing.JTextField();
        usernameTextField = new javax.swing.JTextField();
        modelTextField = new javax.swing.JTextField();
        osTypeLabel = new javax.swing.JLabel();
        osTypeComboBox = new javax.swing.JComboBox<>();
        memorySizeTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        priceTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        internetQuotaTextField = new javax.swing.JTextField();
        expLabel = new javax.swing.JLabel();
        dayLabel = new javax.swing.JLabel();
        dayTextField = new javax.swing.JTextField();
        monthTextField = new javax.swing.JTextField();
        yearTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cityOrABNLabel = new javax.swing.JLabel();
        cityOrABNTextField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        noEmployeesLabel = new javax.swing.JLabel();
        numOfEmployeesTextField = new javax.swing.JTextField();
        capLimitTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        planIDLabel = new javax.swing.JLabel();
        findPlanTextField = new javax.swing.JTextField();
        findButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        planTextArea = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        infoTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        infoTable1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        mobilemodelTextField = new javax.swing.JTextField();
        expTextField = new javax.swing.JTextField();
        sortCheckBox = new javax.swing.JCheckBox();
        filterButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        logoutBar = new javax.swing.JMenu();

        deletPopup.setText("jMenuItem1");
        deletPopup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletPopupActionPerformed(evt);
            }
        });
        popUpMenu.add(deletPopup);

        updatePopup.setText("jMenuItem2");
        updatePopup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePopupActionPerformed(evt);
            }
        });
        popUpMenu.add(updatePopup);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabs.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabsStateChanged(evt);
            }
        });
        tabs.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                tabsMouseMoved(evt);
            }
        });
        tabs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tabsMouseEntered(evt);
            }
        });

        userIDLabel.setText("User ID");

        nameLabel.setText("Name");

        passwordLabel.setText("Password");

        addressInfoLabel.setText("Address Info");

        streetNumLabel.setText("Street Number");

        streetLabel.setText("Street");

        suburbLabel.setText("Suburb");

        cityLabel.setText("City");

        userIdTextField.setEditable(false);

        cityComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cityTextField.setEditable(false);

        newCityRadioButton.setText("New City");
        newCityRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newCityRadioButtonActionPerformed(evt);
            }
        });

        changeButton.setForeground(new java.awt.Color(255, 51, 51));
        changeButton.setText("Change");
        changeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(275, 275, 275)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(userIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(passwordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addressInfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(streetNumLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(streetLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(suburbLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cityLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(userIdTextField)
                    .addComponent(nameTextField)
                    .addComponent(passwordTextField)
                    .addComponent(streetNumTextField)
                    .addComponent(streetTextField)
                    .addComponent(suburbTextField)
                    .addComponent(cityComboBox, 0, 140, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(newCityRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(changeButton)))
                .addContainerGap(160, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userIDLabel)
                    .addComponent(userIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordLabel))
                .addGap(55, 55, 55)
                .addComponent(addressInfoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(streetNumLabel)
                    .addComponent(streetNumTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(streetLabel)
                    .addComponent(streetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(suburbLabel)
                    .addComponent(suburbTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityLabel)
                    .addComponent(cityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newCityRadioButton))
                .addGap(31, 31, 31)
                .addComponent(changeButton)
                .addContainerGap(200, Short.MAX_VALUE))
        );

        tabs.addTab("Edit Personal Data", jPanel1);

        buttonGroup1.add(personalPlanRadioButton);
        personalPlanRadioButton.setSelected(true);
        personalPlanRadioButton.setText("Personal Plan");
        personalPlanRadioButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                personalPlanRadioButtonStateChanged(evt);
            }
        });

        buttonGroup1.add(businessPlanRadioButton);
        businessPlanRadioButton.setText("Business Plan");

        planIdLabel.setText("Plan ID");

        usernameLabel.setText("Username");

        mobilePhoneLabel.setText("Mobile Phone ________________________________________________________________________________________");

        modelLabel.setText("Model");

        planIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                planIDTextFieldActionPerformed(evt);
            }
        });

        osTypeLabel.setText("OS Type");

        osTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        osTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                osTypeComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("Memory Size");

        jLabel2.setText("Price");

        jLabel3.setText("Internet Quota");

        expLabel.setText("EXP Date ________________________________________________________________________________________");

        dayLabel.setText("Day");

        jLabel4.setText("Month");

        jLabel5.setText("Year");

        cityOrABNLabel.setText("City");

        addButton.setForeground(new java.awt.Color(255, 0, 102));
        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        clearButton.setForeground(new java.awt.Color(255, 0, 102));
        clearButton.setText("CLEAR");
        clearButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                clearButtonStateChanged(evt);
            }
        });
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        noEmployeesLabel.setText("NO. Of Employees");

        jLabel8.setText("Cap Limit");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(mobilePhoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 372, Short.MAX_VALUE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(planIdLabel)
                                    .addComponent(usernameLabel)
                                    .addComponent(modelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(osTypeLabel)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(dayLabel)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)
                                    .addComponent(cityOrABNLabel)
                                    .addComponent(noEmployeesLabel)
                                    .addComponent(jLabel8))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(capLimitTextField)
                                    .addComponent(numOfEmployeesTextField)
                                    .addComponent(yearTextField)
                                    .addComponent(monthTextField)
                                    .addComponent(memorySizeTextField)
                                    .addComponent(planIDTextField)
                                    .addComponent(usernameTextField)
                                    .addComponent(modelTextField)
                                    .addComponent(osTypeComboBox, 0, 110, Short.MAX_VALUE)
                                    .addComponent(priceTextField)
                                    .addComponent(internetQuotaTextField)
                                    .addComponent(dayTextField)
                                    .addComponent(cityOrABNTextField))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(181, 181, 181))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(expLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(personalPlanRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(businessPlanRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(81, 81, 81))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(personalPlanRadioButton)
                    .addComponent(businessPlanRadioButton))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(planIdLabel)
                    .addComponent(planIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameLabel)
                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mobilePhoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modelLabel)
                    .addComponent(modelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(osTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(osTypeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(memorySizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(priceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(internetQuotaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(capLimitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(4, 4, 4)
                .addComponent(expLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dayLabel)
                    .addComponent(dayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(monthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(clearButton)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(yearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(addButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cityOrABNLabel)
                    .addComponent(cityOrABNTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noEmployeesLabel)
                    .addComponent(numOfEmployeesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        tabs.addTab("Add Plan", jPanel5);

        planIDLabel.setText("Plan ID");

        findPlanTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findPlanTextFieldActionPerformed(evt);
            }
        });

        findButton.setText("Find");
        findButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findButtonActionPerformed(evt);
            }
        });

        planTextArea.setEditable(false);
        planTextArea.setBackground(new java.awt.Color(102, 255, 102));
        planTextArea.setColumns(20);
        planTextArea.setRows(5);
        jScrollPane1.setViewportView(planTextArea);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(planIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(findPlanTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(findButton)
                .addContainerGap(655, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(planIDLabel)
                    .addComponent(findPlanTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(findButton))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabs.addTab("Find a Plan", jPanel2);

        updateButton.setText("UPDATE");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("DELETE");
        deleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteButtonMouseClicked(evt);
            }
        });
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        infoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        infoTable.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                infoTableAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        infoTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                infoTableFocusGained(evt);
            }
        });
        infoTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                infoTableMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                infoTableMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                infoTableMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(infoTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(354, 354, 354)
                .addComponent(deleteButton)
                .addGap(90, 90, 90)
                .addComponent(updateButton)
                .addContainerGap(400, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton)
                    .addComponent(updateButton))
                .addGap(0, 125, Short.MAX_VALUE))
        );

        tabs.addTab("Plans Info", jPanel3);

        infoTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        infoTable1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                infoTable1AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        infoTable1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                infoTable1FocusGained(evt);
            }
        });
        infoTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                infoTable1MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(infoTable1);

        jLabel6.setText("Mobile Model");

        jLabel7.setText("EXP Date");

        mobilemodelTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobilemodelTextFieldActionPerformed(evt);
            }
        });
        mobilemodelTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mobilemodelTextFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mobilemodelTextFieldKeyTyped(evt);
            }
        });

        sortCheckBox.setText("Sort By Username");
        sortCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortCheckBoxActionPerformed(evt);
            }
        });

        filterButton.setText("Filter By Date");
        filterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 978, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(29, 29, 29)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mobilemodelTextField)
                    .addComponent(expTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE))
                .addGap(36, 36, 36)
                .addComponent(filterButton)
                .addGap(192, 192, 192)
                .addComponent(sortCheckBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(mobilemodelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(expTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(filterButton))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(sortCheckBox)))
                .addGap(0, 106, Short.MAX_VALUE))
        );

        tabs.addTab("Filter Plans", jPanel4);

        logoutBar.setText("Logout");
        logoutBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutBarMouseClicked(evt);
            }
        });
        logoutBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                logoutBarKeyPressed(evt);
            }
        });
        jMenuBar1.add(logoutBar);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabs)
                .addGap(39, 39, 39))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void findPlanTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findPlanTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_findPlanTextFieldActionPerformed

    private void findButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findButtonActionPerformed
        // TODO add your handling code here:
        try {
            MobilePlan plan = user.findPlan(Integer.parseInt(findPlanTextField.getText()));
            if (plan != null) {
                planTextArea.append(plan.toString() + "\n");
            } else {
                planTextArea.append("Plan wit ID = " + findPlanTextField.getText() + "not found\n");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);

        }
    }//GEN-LAST:event_findButtonActionPerformed

    private void logoutBarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutBarMouseClicked
        // TODO add your handling code here:
        login.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logoutBarMouseClicked

    private void tabsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabsMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tabsMouseClicked

    private void tabsMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabsMouseMoved
        // TODO add your handling code here
    }//GEN-LAST:event_tabsMouseMoved

    private void newCityRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newCityRadioButtonActionPerformed
        // TODO add your handling code here:
        if (newCityRadioButton.isSelected() == true) {
            cityTextField.setEnabled(true);
            cityComboBox.setEnabled(false);
            cityTextField.setEditable(true);
        } else if (newCityRadioButton.isSelected() == false) {
            cityTextField.setEnabled(false);
            cityComboBox.setEnabled(true);
            cityTextField.setEditable(false);
        }
    }//GEN-LAST:event_newCityRadioButtonActionPerformed

    private void tabsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabsMouseEntered
        // TODO add your handling code here:
//        userIdTextField.setText(user.getID()+"");
//        nameTextField.setText(user.getName());
//        //usernameTextField.setText(user.getUserName());
//        passwordTextField.setText(user.getPassword());
//        streetNumTextField.setText(String.valueOf(user.getAddress().getStreetNum()));
//        streetTextField.setText(user.getAddress().getStreet());
//        suburbTextField.setText(user.getAddress().getSuburb());
//        
//        cityComboBox.setModel(new DefaultComboBoxModel<String>(cities.toArray(new String[0])));
//        cityComboBox.setSelectedItem(user.getCity());
//        cityTextField.setText(user.getCity());
    }//GEN-LAST:event_tabsMouseEntered

    private void tabsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabsStateChanged
        // TODO add your handling code here:
        userIdTextField.setText(user.getID() + "");
        nameTextField.setText(user.getName());
        //usernameTextField.setText(user.getUserName());
        passwordTextField.setText(user.getPassword());
        streetNumTextField.setText(String.valueOf(user.getAddress().getStreetNum()));
        streetTextField.setText(user.getAddress().getStreet());
        suburbTextField.setText(user.getAddress().getSuburb());

        cityComboBox.setModel(new DefaultComboBoxModel<String>(cities.toArray(new String[0])));
        cityComboBox.setSelectedItem(user.getCity());
        cityTextField.setText(user.getCity());

        osTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(MobileType.values()));
    }//GEN-LAST:event_tabsStateChanged

    private void changeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeButtonActionPerformed
        // TODO add your handling code here:
        try {
            user.setName(nameTextField.getText());
            user.setPassword(passwordTextField.getText());
            user.getAddress().setSuburb(suburbTextField.getText());
            user.getAddress().setStreet(streetTextField.getText());
            user.getAddress().setStreetNum(parseInt(streetNumTextField.getText()));
            if (newCityRadioButton.isSelected()) {
                user.getAddress().setCity(cityTextField.getText());
                cities.add(cityTextField.getText());
                cityComboBox.setModel(new DefaultComboBoxModel<String>(cities.toArray(new String[0])));
                cityComboBox.setSelectedItem(cityTextField.getText());
            } else {
                user.getAddress().setCity((String) cityComboBox.getSelectedItem());
                cityTextField.setText(user.getCity());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_changeButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        try {
            int id = Integer.parseInt(planIDTextField.getText());
            String username = usernameTextField.getText();
            String model = modelTextField.getText();
            MobileType type = (MobileType) osTypeComboBox.getSelectedItem();
            int size = Integer.parseInt(memorySizeTextField.getText());
            double price = Double.parseDouble(priceTextField.getText());
            int quota = Integer.parseInt(internetQuotaTextField.getText());
            int cap = Integer.parseInt(capLimitTextField.getText());
            int day = Integer.parseInt(dayTextField.getText());
            int month = Integer.parseInt(monthTextField.getText());
            int year = Integer.parseInt(yearTextField.getText());
            MyDate date = new MyDate(year, month, day);
            MobilePhone phone = new MobilePhone(model, type, size, price);
            MobilePlan plan;
            if (personalPlanRadioButton.isSelected()) {
                String city = cityOrABNTextField.getText();
                plan = new PersonalPlan(username, id, phone, quota, cap, date, city);
            } else {
                int abn = Integer.parseInt(cityOrABNTextField.getText());
                int numOfEmployee = Integer.parseInt(numOfEmployeesTextField.getText());
                plan = new BusinessPlan(username, id, phone, quota, cap, date, abn, numOfEmployee);
            }
            if (user.addPlan(plan)) {
                JOptionPane.showMessageDialog(this, "Plan has been added");
                clear();
            } else {
                JOptionPane.showMessageDialog(this, "Plan can not be added");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_addButtonActionPerformed

    public void fillTable() {
        String[] header = {"Plan ID", "Username", "Model", "OS Type", "Memory Size", "Price", "Internet Qouta", "Cap Limit", "EXP Date", "City", "ABN", "NO. Employees", "Monthly Payment"};
        DefaultTableModel model = new DefaultTableModel(header, 0);
        infoTable.setModel(model);
        for (MobilePlan plan : user.getPlans().values()) {
            String[] row = new String[13];
            row[0] = plan.getId() + "";
            row[1] = plan.userName;
            row[2] = plan.getHandsetModel();
            row[3] = plan.handset.getType().toString();
            row[4] = plan.handset.getMemorySize() + "";
            row[5] = plan.handset.getPrice() + "";
            row[6] = plan.internetQuota + "";
            row[7] = plan.capLimit + "";
            row[8] = plan.getExpiryDate().toString();
            if (plan instanceof PersonalPlan) {
                row[9] = ((PersonalPlan) plan).city;
                row[10] = "N/A";
                row[11] = "N/A";
            } else {
                row[9] = "N/A";
                row[10] = ((BusinessPlan) plan).ABN + "";
                row[11] = ((BusinessPlan) plan).numberOfEmployees + "";
            }
            row[12] = String.format("$%.2f", plan.calcPayment(10));
            model.addRow(row);
        }

    }

    public void clear() {
        planIDTextField.setText("");
        usernameTextField.setText("");
        modelTextField.setText("");
        memorySizeTextField.setText("");
        priceTextField.setText("");
        internetQuotaTextField.setText("");
        capLimitTextField.setText("");
        dayTextField.setText("");
        monthTextField.setText("");
        yearTextField.setText("");
        cityOrABNTextField.setText("");
        numOfEmployeesTextField.setText("");
    }
    private void planIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_planIDTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_planIDTextFieldActionPerformed

    private void clearButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_clearButtonStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_clearButtonStateChanged

    private void personalPlanRadioButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_personalPlanRadioButtonStateChanged
        // TODO add your handling code here:
        if (personalPlanRadioButton.isSelected()) {
            noEmployeesLabel.setVisible(false);
            numOfEmployeesTextField.setVisible(false);
            cityOrABNLabel.setText("City");
        } else {
            noEmployeesLabel.setVisible(true);
            numOfEmployeesTextField.setVisible(true);
            cityOrABNLabel.setText("ABN");
        }
    }//GEN-LAST:event_personalPlanRadioButtonStateChanged

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        try {
            int ind = infoTable.getSelectedRow();
            System.out.print(ind);
            DefaultTableModel model = (DefaultTableModel) infoTable.getModel();
            MobilePlan plan = user.findPlan(Integer.parseInt((String) model.getValueAt(ind, 0)));
            if (ind >= 0) {
                UpdateUI updateUI = new UpdateUI(plan, this);
                updateUI.setVisible(true);
            }
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(this, "No plan has been selected yet.");
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here
        try {
            int ind = infoTable.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) infoTable.getModel();
            MobilePlan plan = user.findPlan(Integer.parseInt((String) model.getValueAt(ind, 0)));
            if (ind >= 0) {
                user.getPlans().remove(plan.getId());
                fillTable();
            }
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(this, "No plan has been selected yet.");
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void osTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_osTypeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_osTypeComboBoxActionPerformed

    private void infoTableAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_infoTableAncestorAdded
        // TODO add your handling code here:
        fillTable();
    }//GEN-LAST:event_infoTableAncestorAdded

    private void infoTableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_infoTableFocusGained
        // TODO add your handling code here:
        fillTable();
    }//GEN-LAST:event_infoTableFocusGained

    private void infoTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_infoTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_infoTableMouseClicked

    private void infoTable1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_infoTable1AncestorAdded
        // TODO add your handling code here:
        fillTable1();
    }//GEN-LAST:event_infoTable1AncestorAdded

    private void infoTable1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_infoTable1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_infoTable1FocusGained

    private void infoTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_infoTable1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_infoTable1MouseClicked

    private void deleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteButtonMouseClicked
        // TODO add your handling code here:       
    }//GEN-LAST:event_deleteButtonMouseClicked

    private void filterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterButtonActionPerformed
        // TODO add your handling code here:
        fillTable1();
    }//GEN-LAST:event_filterButtonActionPerformed

    private void logoutBarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_logoutBarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_logoutBarKeyPressed

    private void mobilemodelTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobilemodelTextFieldActionPerformed
        // TODO add your handling code here:
        fillTable1();
    }//GEN-LAST:event_mobilemodelTextFieldActionPerformed

    private void sortCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortCheckBoxActionPerformed
        // TODO add your handling code here:
        fillTable1();
    }//GEN-LAST:event_sortCheckBoxActionPerformed

    private void infoTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_infoTableMousePressed
        // TODO add your handling code here:
//        Point point = evt.getPoint();
//        int rowSelected = infoTable.rowAtPoint(point);
//        infoTable.setRowSelectionInterval(rowSelected, rowSelected);
    }//GEN-LAST:event_infoTableMousePressed

    private void infoTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_infoTableMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_infoTableMouseReleased

     
    private void deletPopupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletPopupActionPerformed
        // TODO add your handling code here:
        try {
            int ind = infoTable.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) infoTable.getModel();
            MobilePlan plan = user.findPlan(Integer.parseInt((String) model.getValueAt(ind, 0)));
            if (ind >= 0) {
                user.getPlans().remove(plan.getId());
                fillTable();
            }
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(this, "No plan has been selected yet.");
        }
    }//GEN-LAST:event_deletPopupActionPerformed

    private void updatePopupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePopupActionPerformed
        // TODO add your handling code here:
        try {
            int ind = infoTable.getSelectedRow();
            System.out.print(ind);
            DefaultTableModel model = (DefaultTableModel) infoTable.getModel();
            //model = new DefaultTableModel(infoTable.getRowCount(), infoTable.getColumnCount());
            MobilePlan plan = user.findPlan(Integer.parseInt((String) model.getValueAt(ind, 0)));
            if (ind >= 0) {
                UpdateUI updateUI = new UpdateUI(plan, this);
                updateUI.setVisible(true);
            }
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(this, "No plan has been selected yet.");
        }
    }//GEN-LAST:event_updatePopupActionPerformed

    private void mobilemodelTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mobilemodelTextFieldKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_mobilemodelTextFieldKeyTyped

    private void mobilemodelTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mobilemodelTextFieldKeyReleased
        // TODO add your handling code here:
        fillTable1();
    }//GEN-LAST:event_mobilemodelTextFieldKeyReleased

    public void fillTable1() {
        ArrayList<MobilePlan> plansCopy = user.shallowCopyPlans();

        for (MobilePlan plan : user.getPlans().values()) {
            //plansCopy.add(plan);
            try {
                if (!mobilemodelTextField.getText().isEmpty()) {
                    plansCopy = MobilePlan.filterByMobileModel(plansCopy, mobilemodelTextField.getText());
                }
                if (!expTextField.getText().isEmpty()) {
                    String[] fields = expTextField.getText().split("/");
                    int year = Integer.parseInt(fields[0]);
                    int month = Integer.parseInt(fields[1]);
                    int day = Integer.parseInt(fields[2]);
                    MyDate date = new MyDate(year, month, day);
                    plansCopy = MobilePlan.filterByExpiryDate(plansCopy, date);
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
            }
            if (sortCheckBox.isSelected()) {
                Collections.sort(plansCopy);
            }

        }

        String[] header = {"Plan ID", "Username", "Model", "OS Type", "Memory Size", "Price", "Internet Qouta", "Cap Limit", "EXP Date", "City", "ABN", "NO. Employees", "Monthly Payment"};
        DefaultTableModel model = new DefaultTableModel(header, 0);
        infoTable1.setModel(model);

        for (MobilePlan plan : plansCopy) {
            String[] row = new String[13];
            row[0] = plan.getId() + "";
            row[1] = plan.userName;
            row[2] = plan.getHandsetModel();
            row[3] = plan.handset.getType().toString();
            row[4] = plan.handset.getMemorySize() + "";
            row[5] = plan.handset.getPrice() + "";
            row[6] = plan.internetQuota + "";
            row[7] = plan.capLimit + "";
            row[8] = plan.getExpiryDate().toString();
            if (plan instanceof PersonalPlan) {
                row[9] = ((PersonalPlan) plan).city;
                row[10] = "N/A";
                row[11] = "N/A";
            } else {
                row[9] = "N/A";
                row[10] = ((BusinessPlan) plan).ABN + "";
                row[11] = ((BusinessPlan) plan).numberOfEmployees + "";
            }
            row[12] = String.format("$%.2f", plan.calcPayment(10));
            model.addRow(row);
        }
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new UserUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JLabel addressInfoLabel;
    private javax.swing.JRadioButton businessPlanRadioButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField capLimitTextField;
    private javax.swing.JButton changeButton;
    private javax.swing.JComboBox<String> cityComboBox;
    private javax.swing.JLabel cityLabel;
    private javax.swing.JLabel cityOrABNLabel;
    private javax.swing.JTextField cityOrABNTextField;
    private javax.swing.JTextField cityTextField;
    private javax.swing.JButton clearButton;
    private javax.swing.JLabel dayLabel;
    private javax.swing.JTextField dayTextField;
    private javax.swing.JMenuItem deletPopup;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel expLabel;
    private javax.swing.JTextField expTextField;
    private javax.swing.JButton filterButton;
    private javax.swing.JButton findButton;
    private javax.swing.JTextField findPlanTextField;
    private javax.swing.JTable infoTable;
    private javax.swing.JTable infoTable1;
    private javax.swing.JTextField internetQuotaTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JMenu logoutBar;
    private javax.swing.JTextField memorySizeTextField;
    private javax.swing.JLabel mobilePhoneLabel;
    private javax.swing.JTextField mobilemodelTextField;
    private javax.swing.JLabel modelLabel;
    private javax.swing.JTextField modelTextField;
    private javax.swing.JTextField monthTextField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JRadioButton newCityRadioButton;
    private javax.swing.JLabel noEmployeesLabel;
    private javax.swing.JTextField numOfEmployeesTextField;
    private javax.swing.JComboBox<String> osTypeComboBox;
    private javax.swing.JLabel osTypeLabel;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JTextField passwordTextField;
    private javax.swing.JRadioButton personalPlanRadioButton;
    private javax.swing.JLabel planIDLabel;
    private javax.swing.JTextField planIDTextField;
    private javax.swing.JLabel planIdLabel;
    private javax.swing.JTextArea planTextArea;
    private javax.swing.JPopupMenu popUpMenu;
    private javax.swing.JTextField priceTextField;
    private javax.swing.JCheckBox sortCheckBox;
    private javax.swing.JLabel streetLabel;
    private javax.swing.JLabel streetNumLabel;
    private javax.swing.JTextField streetNumTextField;
    private javax.swing.JTextField streetTextField;
    private javax.swing.JLabel suburbLabel;
    private javax.swing.JTextField suburbTextField;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JButton updateButton;
    private javax.swing.JMenuItem updatePopup;
    private javax.swing.JLabel userIDLabel;
    private javax.swing.JTextField userIdTextField;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTextField;
    private javax.swing.JTextField yearTextField;
    // End of variables declaration//GEN-END:variables
}
